version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: subscription-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: subscription_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d subscription_service"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - subscription-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: subscription-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - CONFIG_PATH=/app/configs/config.yaml
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_DB_NAME=subscription_service
      - DATABASE_SSL_MODE=disable
      - LOGGER_LEVEL=info
      - LOGGER_DEVELOPMENT=false
      - LOGGER_ENCODING=json
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./configs:/app/configs:ro
    networks:
      - subscription-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  adminer:
    image: adminer:4.8.1
    container_name: subscription-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - subscription-network

volumes:
  postgres_data:
    driver: local

networks:
  subscription-network:
    driver: bridge